/*
 * $Id: syntax.xel,v 1.6 2009/05/26 10:36:25 danielyuan Exp $
 *
 * Copyright (C) 2006 Operamasks Community.
 * Copyright (C) 2000-2006 Apusic Systems, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses.
 */

/* Defines some cute grammars. */

grammar
{
goal
    : #exp 'if' #pred       -> pred ? exp : null

    | #exp 'unless' #pred   -> pred ? null : exp

    | 'do' @stmt 'while' '(' #pred ')' -> {
        while (true) {
            stmt;
            if (!pred) break;
        }
      }

    | 'do' @stmt 'until' '(' #pred ')' -> {
        while (true) {
            stmt;
            if (pred) break;
        }
      }
}

grammar
{
goal: 'select' #subject 'from' from_list where_clause=('where' #exp)?
        {
            define e = LIST(subject);

            if (where_clause != null) {
                e = CONDITION(where_clause, e, null);
            }

            for ((var,exp) in from_list) {
                e = |$exp.mappend(\$var=>$e)|;
            }

            e;
        }

from_list
        : from_list ',' from_clause { [from_clause : from_list] } /* in reversed order */
        | from_clause               { [from_clause] }

from_clause
        : $var 'in' #exp            { (var, exp) }
}
